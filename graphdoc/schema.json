{
  "data": {
    "__schema": {
      "queryType": {
        "name": "Query"
      },
      "mutationType": {
        "name": "Mutation"
      },
      "subscriptionType": null,
      "types": [
        {
          "kind": "SCALAR",
          "name": "String",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Boolean",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Float",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Int",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "ID",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Date",
          "description": "The `Date` scalar type represents a timestamp provided in UTC. `Date` expects timestamps to be formatted in accordance with the [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Decimal",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Schema",
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "types",
              "description": "A list of all types supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "queryType",
              "description": "The type that query operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mutationType",
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscriptionType",
              "description": "If this server supports subscription, the type that subscription operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "directives",
              "description": "A list of all directives supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Type",
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\r\n\r\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "fields": [
            {
              "name": "kind",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fields",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "interfaces",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "possibleTypes",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enumValues",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inputFields",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ofType",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "__TypeKind",
          "description": "An enum describing what kind of type a given __Type is.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SCALAR",
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Indicates this type is an object.  `fields` and `possibletypes` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Indicates this type is an interface.  `fields` and `possibleTypes` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Indicates this type is a union.  `possibleTypes` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Indicates this type is an num.  `enumValues` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Indicates this type is an input object.  `inputFields` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LIST",
              "description": "Indicates this type is a list.  `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NON_NULL",
              "description": "Indicates this type is a non-null.  `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Field",
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__InputValue",
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defaultValue",
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__EnumValue",
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Directive",
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\r\n\r\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locations",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "onOperation",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": true,
              "deprecationReason": "Use 'locations'."
            },
            {
              "name": "onFragment",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": true,
              "deprecationReason": "Use 'locations'."
            },
            {
              "name": "onField",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": true,
              "deprecationReason": "Use 'locations'."
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "QUERY",
              "description": "Location adjacent to a query operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MUTATION",
              "description": "Location adjacent to a mutation operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUBSCRIPTION",
              "description": "Location adjacent to a subscription operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD",
              "description": "Location ajdacent to a field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_DEFINITION",
              "description": "Location adjacent to a fragment definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_SPREAD",
              "description": "Location adjacent to a fragment spread.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INLINE_FRAGMENT",
              "description": "Location adjacent to an inline fragment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEMA",
              "description": "Location adjacent to a schema definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCALAR",
              "description": "Location adjacent to a scalar definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Location adjacent to an object type definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD_DEFINITION",
              "description": "Location adjacent to a field definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARGUMENT_DEFINITION",
              "description": "Location adjacent to an argument defintion.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Location adjacent to an interface definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Location adjacent to a union definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Location adjacent to an enum definition",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM_VALUE",
              "description": "Location adjacent to an enum value definition",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Location adjacent to an input object type defintion.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_FIELD_DEFINITION",
              "description": "Location adjacent to an input object field definition.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Query",
          "description": "The query root of Snowflake's GraphQL interface",
          "fields": [
            {
              "name": "gameConfiguration",
              "description": "Gets the emulator configuration the specified game and emulator.",
              "args": [
                {
                  "name": "emulatorName",
                  "description": "The plugin name of the emulator.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "gameGuid",
                  "description": "The GUID of the game of this collection",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Guid",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "profileName",
                  "description": "The name of the configuration profile.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": "\"default\""
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ConfigurationCollection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pluginConfiguration",
              "description": "Gets the plugin configuration options for the specified plugin.",
              "args": [
                {
                  "name": "pluginName",
                  "description": "The name of the plugin.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ConfigurationSection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "controllerLayouts",
              "description": "All Stone Controller Layouts",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ControllerLayoutConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "controllerLayout",
              "description": "A Stone Controller Layout",
              "args": [
                {
                  "name": "layoutID",
                  "description": "The Stone Layout ID for this controller",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ControllerLayout",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lowLevelInputDevices",
              "description": "Gets all enumerated input devices on this computer.",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LowLevelInputDeviceConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inputDevices",
              "description": "Gets the sorted input devices on this computer.",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "InputDeviceConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mappedControllerProfile",
              "description": "Gets a controller profile for the given Stone controller and real device",
              "args": [
                {
                  "name": "controllerId",
                  "description": "The Stone Controller ID to map to.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "deviceId",
                  "description": "The real device to map from.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "profileName",
                  "description": "A profile name.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "\"default\""
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "MappedControllerElementCollection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defaultControllerProfile",
              "description": "Gets the default controller profile for the given Stone controller and real device.",
              "args": [
                {
                  "name": "controllerId",
                  "description": "The Stone Controller ID to map to.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "deviceId",
                  "description": "The real device to map from.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "profileName",
                  "description": "A profile name.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "\"default\""
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "MappedControllerElementCollection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testEmuTask",
              "description": "test",
              "args": [
                {
                  "name": "controllers",
                  "description": "The emulated controller input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "INPUT_OBJECT",
                        "name": "EmulatedControllerInput",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "EmulatorTaskResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "emulatedController",
              "description": "Gets the emulated controller object",
              "args": [
                {
                  "name": "input",
                  "description": "The emulated controller input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "EmulatedControllerInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "EmulatedController",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "installedModules",
              "description": "Get a list of modules installed in the module directory.",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ModuleConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadedServices",
              "description": "Get a list of services loaded.",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "StringConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadedPlugins",
              "description": "Gets a list of plugins loaded.",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PluginConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadedScrapers",
              "description": "Gets a list of scrapers loaded.",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ScraperConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadedCullers",
              "description": "Gets a list of cullers loaded.",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PluginConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadedEmulators",
              "description": "Gets a list of emulators loaded.",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "EmulatorConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "platformInfos",
              "description": "All Registered Stone Platforms",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PlatformInfoConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "platformInfo",
              "description": "A Stone Platform",
              "args": [
                {
                  "name": "platformID",
                  "description": "The Stone PlatformID for this platform",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PlatformInfo",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "games",
              "description": "Get all Games",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "GameRecordConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "files",
              "description": "Get all files",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FileRecordConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gamesByPlatform",
              "description": "Get games filtered by a given platform",
              "args": [
                {
                  "name": "after",
                  "description": "Only look at connected edges with cursors greater than the value of `after`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "first",
                  "description": "Specifies the number of edges to return starting from `after` or the first entry if `after` is not specified.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "null"
                },
                {
                  "name": "platformId",
                  "description": "The platform ID",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "GameRecordConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "file",
              "description": "Get a file by an ID",
              "args": [
                {
                  "name": "guid",
                  "description": "The unique file GUID",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Guid",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FileRecord",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fileByPath",
              "description": "Get a file by a filepath",
              "args": [
                {
                  "name": "filePath",
                  "description": "The path of the file on the FileSystem",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FileRecord",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "game",
              "description": "Get a game by an ID",
              "args": [
                {
                  "name": "guid",
                  "description": "The unique game GUID",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Guid",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "GameRecord",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "autoScrape",
              "description": "seed test",
              "args": [
                {
                  "name": "platform",
                  "description": "platform",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "title",
                  "description": "title",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "scraperNames",
                  "description": "The scrapers to use for this job.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "cullerNames",
                  "description": "The cullers to use for this job.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Seed",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createJobWithAllScrapers",
              "description": "Creates a scrape job using all registered scrapers (testing only)",
              "args": [
                {
                  "name": "seeds",
                  "description": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SeedTreeInputObjectCollection",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "scraperNames",
                  "description": "The scrapers to use for this job.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "cullerNames",
                  "description": "The cullers to use for this job.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "proceedScrapeJob",
              "description": "Proceeds with the scrape job",
              "args": [
                {
                  "name": "jobGuid",
                  "description": "The GUID of the job",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Guid",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getJobSeeds",
              "description": "Gets the seeds of the given job",
              "args": [
                {
                  "name": "jobGuid",
                  "description": "The GUID of the job",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Guid",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Seed",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "resultJob",
              "description": "Results the job. Does not add to database!!",
              "args": [
                {
                  "name": "jobGuid",
                  "description": "The GUID of the job",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Guid",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "GameRecord",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cullSeeds",
              "description": "Cull the seeds",
              "args": [
                {
                  "name": "jobGuid",
                  "description": "The GUID of the job",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Guid",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "culledSeeds",
                  "description": "Culled Seeds",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "Guid",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Seed",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ConfigurationCollection",
          "description": "A `ConfigurationCollection` is a collection of `ConfigurationSections` for a given emulator.",
          "fields": [
            {
              "name": "descriptor",
              "description": "Describes this configuration collection.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ConfigurationCollectionDescriptor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sections",
              "description": "The various sections of this configuration collection.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ConfigurationSection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ConfigurationCollectionDescriptor",
          "description": "Describes a `ConfigurationCollection` with the keys of each section.",
          "fields": [
            {
              "name": "sectionKeys",
              "description": "The keys of this section.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ConfigurationSection",
          "description": "A configuration section is a grouping of related `ConfigurationOptions`.",
          "fields": [
            {
              "name": "sectionKey",
              "description": "The key of this configuration section.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "descriptor",
              "description": "Describes this configuration section.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ConfigurationSectionDescriptor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "values",
              "description": "The values of this instance of the configuration.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ConfigurationValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ConfigurationSectionDescriptor",
          "description": "Describes a `ConfigurationSection` with its human readable name and description.",
          "fields": [
            {
              "name": "description",
              "description": "The description of this configuration section.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "displayName",
              "description": "The human readable name of this configuration section.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sectionName",
              "description": "The section name as it appears in serialized configuration.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "options",
              "description": "The options of this configuration section.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ConfigurationOptionDescriptor",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ConfigurationOptionDescriptor",
          "description": "Describes a configuration option.",
          "fields": [
            {
              "name": "description",
              "description": "The option description.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "displayName",
              "description": "The human readable name of this option.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "optionName",
              "description": "The option name as it is serialized into the configuration.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "optionKey",
              "description": "The key name of this option.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "simple",
              "description": "Whether or not this option is for 'simple' display mode.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "private",
              "description": "Whether or not tihs option should be showed to the user.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "flag",
              "description": "Whether or not this option is a flag.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isPath",
              "description": "Whether or not this option is a file path option.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isSelection",
              "description": "Whether or not this option is a selection option.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "min",
              "description": "The minimum value allowed if this option is a numeric option.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "max",
              "description": "The maximum value allowed if this option is a numeric option.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "increment",
              "description": "The increment allowed if this option is a numeric option.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The option value type",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "ConfigurationOptionTypeEnum",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customMetadata",
              "description": "Any custom metadata this option may have.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CustomMetadata",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "default",
              "description": "The default value of this option.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Primitive",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typedDefault",
              "description": "The default value of this option, boxed into a union of possible types.",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "Value",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "selections",
              "description": "A list of selections if this is a selection option.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "SelectionOptionDescriptor",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ConfigurationOptionTypeEnum",
          "description": "The valid types of configuration values",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "STRING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PATH",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BOOLEAN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTEGER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DECIMAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SELECTION",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomMetadata",
          "description": "Custom metadata for usually flag options.",
          "fields": [
            {
              "name": "key",
              "description": "The custom metadata key.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "The value of the custom metadata.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Primitive",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typedValue",
              "description": "The value of the custom metadata.",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "Value",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Primitive",
          "description": "A type-unsafe scalar value.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "UNION",
          "name": "Value",
          "description": "A boxed primitive type.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "IntValue",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "BooleanValue",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "StringValue",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "FloatValue",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "EnumIntValue",
              "ofType": null
            }
          ]
        },
        {
          "kind": "OBJECT",
          "name": "IntValue",
          "description": "Boxes a `Int` scalar into an ObjectGraphType.",
          "fields": [
            {
              "name": "value",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BooleanValue",
          "description": "Boxes a `Boolean` scalar into an ObjectGraphType.",
          "fields": [
            {
              "name": "value",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "StringValue",
          "description": "Boxes a `String` scalar into an ObjectGraphType.",
          "fields": [
            {
              "name": "value",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FloatValue",
          "description": "Boxes a `Float` scalar into an ObjectGraphType.",
          "fields": [
            {
              "name": "value",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "EnumIntValue",
          "description": "Boxes a CLR Enum into its numeric value, and the enumeration name.",
          "fields": [
            {
              "name": "value",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SelectionOptionDescriptor",
          "description": "Describes a single valid enumerated selection option",
          "fields": [
            {
              "name": "displayName",
              "description": "The display name of the selection option.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "private",
              "description": "Whether or not to show this option to the user.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "serializeAs",
              "description": "What this option is serialized to in the emulation configuration.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "numericValue",
              "description": "The numeric enumeration value of this selection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enumName",
              "description": "The enumeration name of this enumeration value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ConfigurationValue",
          "description": "The value of a single configuration option key.",
          "fields": [
            {
              "name": "optionKey",
              "description": "The key of the Configuration option this value maps for.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "guid",
              "description": "The GUID of this saved configuration value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "The value of this saved configuration value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Primitive",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typedValue",
              "description": "The value of this saved configuration value, typed on unions.",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "Value",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Guid",
          "description": "Globally Unique Identifier.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ControllerLayoutConnection",
          "description": "A connection from an object to a list of objects of type `ControllerLayout`.",
          "fields": [
            {
              "name": "totalCount",
              "description": "A count of the total number of objects in this connection, ignoring pagination. This allows a client to fetch the first five objects by passing \"5\" as the argument to `first`, then fetch the total count so it could display \"5 of 83\", for example. In cases where we employ infinite scrolling or don't have an exact count of entries, this field will return `null`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ControllerLayoutEdge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "A list of all of the objects returned in the connection. This is a convenience field provided for quickly exploring the API; rather than querying for \"{ edges { node } }\" when no edge data is needed, this field can be used instead. Note that when clients like Relay need to fetch the \"cursor\" field on the edge to enable efficient pagination, this shortcut cannot be used, and the full \"{ edges { node } } \" version should be used instead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ControllerLayout",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PageInfo",
          "description": "Information about pagination in a connection.",
          "fields": [
            {
              "name": "hasNextPage",
              "description": "When paginating forwards, are there more items?",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasPreviousPage",
              "description": "When paginating backwards, are there more items?",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startCursor",
              "description": "When paginating backwards, the cursor to continue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endCursor",
              "description": "When paginating forwards, the cursor to continue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ControllerLayoutEdge",
          "description": "An edge in a connection from an object to another object of type `ControllerLayout`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ControllerLayout",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ControllerLayout",
          "description": "A Stone Controller Layout",
          "fields": [
            {
              "name": "friendlyName",
              "description": "The Friendly Name of this controller layout",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "layoutID",
              "description": "The Stone Layout ID for this controller layout",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "platforms",
              "description": "The platforms this controller supports.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "layout",
              "description": "The layout of this controller.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ControllerElementInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ControllerElementInfo",
          "description": "A layout element of a controller in a controller layout.",
          "fields": [
            {
              "name": "label",
              "description": "The label of this controller element.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The element type of this controller element.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "ControllerElementType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "element",
              "description": "The semantic element this controller element represents.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "ControllerElement",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ControllerElementType",
          "description": "A Stone Controller Element Type",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "Null",
              "description": "This element does not exist. Intended for internal use for consumers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button",
              "description": "A button, usually with a switch or dome that can be depressed on the controller, exclusing directional buttons.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Directional",
              "description": "A directional button or D-pad button representing one of 8 cardinal directions.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AxisPositive",
              "description": "An axis that increases in value on the number line. For example, analog stick movement towards the right, or towards the forward direction..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AxisNegative",
              "description": "An axis that decreases in value on the number line. For example, analog stick movement towards the left, or towards the backwards direction..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Trigger",
              "description": "An analog shoulder trigger, able to be depressed smoothly with varying degrees of pressure from undepressed (0%) to fully depressed (100%), usually marked L2 or R2.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Rumble",
              "description": "A rumble motor that shakes the controller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Keyboard",
              "description": "A keyboard of an unspecified amount of keys. Intended for special-case keyboard handling for consumers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Pointer",
              "description": "A pointing device that can express position in the form of a contiguous set of coordinates on a multi-dimensional cartesian plane. Examples include a mouse, or the Wii Remote IR for 2D.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PointerAxisPositive",
              "description": "A pointer axis that increases in value on the number line, where the pointer device itself is not limited to axis-based representation. For example, continous right mouse movement.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PointerAxisNegative",
              "description": "A pointer axis that increases in value on the number line, where the pointer device itself is not limited to axis-based representation. For example, continous left mouse movement.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Touchscreen",
              "description": "A touch sensitive surface of unspecified size and precision, where input can be expressed as a non-contiguous matrix of coordinates on a 2 dimentional cartesian plane. However, most touchscreens in video game controllers are only concerned with a single matrix due to the lack of multi-touch support.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ControllerElement",
          "description": "A Stone Controller Element",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "NoElement",
              "description": "No element.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonA",
              "description": "The conventional 'A' or confirm face button in a controller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonB",
              "description": "The conventional 'B' or back face button in a controller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonC",
              "description": "The 'C'-labeled, or 3rd button in a 6-face button layout or similar.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonX",
              "description": "The conventional 'X' button in a controller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonY",
              "description": "The conventional 'Y' button in a controller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonZ",
              "description": "The 'Z'-labeled or 6th button in a 6-face button layout or similar.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonL",
              "description": "The shoulder button registering a digital signal on the left side of the controller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonR",
              "description": "The shoulder button registering a digital signal on the right side of the controller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonStart",
              "description": "The traditional 'Start' button on a conventional controller that usually pauses or starts the game.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonSelect",
              "description": "The traditional 'Select' button on a conventional controller that provides auxillary functions.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonGuide",
              "description": "A guide button featured on modern controllers that bring up a pause or guide overlay outside of the game itself.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonClickL",
              "description": "A depression on the left analog stick that registers a digital signal. Usually labeled as L3.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ButtonClickR",
              "description": "A depression on the Right analog stick that registers a digital signal. Usually labeled as R3.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button0",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons, or as a numeric pad key on certain controllers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button1",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons, or as a numeric pad key on certain controllers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button2",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons, or as a numeric pad key on certain controllers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button3",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons, or as a numeric pad key on certain controllers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button4",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons, or as a numeric pad key on certain controllers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button5",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons, or as a numeric pad key on certain controllers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button6",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons, or as a numeric pad key on certain controllers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button7",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons, or as a numeric pad key on certain controllers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button8",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons, or as a numeric pad key on certain controllers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button9",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons, or as a numeric pad key on certain controllers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button10",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button11",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button12",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button13",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button14",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button15",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button16",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button17",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button18",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button19",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button20",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button21",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button22",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button23",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button24",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button25",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button26",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button27",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button28",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button29",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button30",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Button31",
              "description": "Numbered button without semantic value. Used as a placeholder for buttons that do not fit within the other semantic buttons..",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DirectionalN",
              "description": "Directional button indicating the north or upwards direction.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DirectionalE",
              "description": "Directional button indicating the east or rightwards direction.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DirectionalS",
              "description": "Direction button indicating the south or downwards direction.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DirectionalW",
              "description": "Direction button indicating the west or leftwards direction.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DirectionalNE",
              "description": "Auxillary directional button indicating the northeast, or upwards and right direction.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DirectionalNW",
              "description": "Auxillary directional button indicating the northwest, or upwards and left direction.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DirectionalSE",
              "description": "Auxillary directional button indicating the southeast, or downwards and right direction.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DirectionalSW",
              "description": "Auxillary directional button indicating the southwest, or downwards and left direction.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TriggerLeft",
              "description": "An analog shoulder trigger, able to be depressed smoothly with varying degrees of pressure from undepressed (0%) to fully depressed (100%), on the left side of the controller, usually marked L2.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TriggerRight",
              "description": "An analog shoulder trigger, able to be depressed smoothly with varying degrees of pressure from undepressed (0%) to fully depressed (100%), on the right side of the controller, usually marked R2.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AxisLeftAnalogPositiveX",
              "description": "Rightwards movement of the left analog stick along the X axis (horizontally).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AxisLeftAnalogNegativeX",
              "description": "Leftwards movement of the left analog stick along the X axis (horizontally).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AxisLeftAnalogPositiveY",
              "description": "Upwards movement of the left analog stick along the Y axis (vertically).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AxisLeftAnalogNegativeY",
              "description": "Downwards movement of the left analog stick along the Y axis (vertically).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AxisRightAnalogPositiveX",
              "description": "Rightwards movement of the right analog stick along the X axis (horizontally).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AxisRightAnalogNegativeX",
              "description": "Leftwards movement of the right analog stick along the X axis (horizontally).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AxisRightAnalogPositiveY",
              "description": "Upwards movement of the right analog stick along the Y axis (vertically).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AxisRightAnalogNegativeY",
              "description": "Downwards movement of the right analog stick along the Y axis (vertically).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RumbleBig",
              "description": "A large rumble action (usually through the larger of two rumble motors in a controller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RumbleSmall",
              "description": "A smaller rumble action (usually through the smaller of two rumble motors in a controller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Pointer2D",
              "description": "A pointing device that can express position in the form of a contiguous set of coordinates on a 2 dimensional cartesian plane. Examples include a mouse, or the Wii Remote IR.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Pointer3D",
              "description": "A pointing device that can express position in the form of a contiguous set of coordinates in 3 dimensional space. Examples include the Oculus Touch device, or the Playstation Move.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PointerAxisPositiveX",
              "description": "Continous rightwards movement of a pointer device on the X axis (horizontal).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PointerAxisNegativeX",
              "description": "Continous leftwards movement of a pointer device on the X axis (horizontal).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PointerAxisPositiveY",
              "description": "Continous upwards movement of a pointer device on the Y axis (vertical).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PointerAxisNegativeY",
              "description": "Continous downwards movement of a pointer device on the Y axis (vertical).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PointerAxisPositiveZ",
              "description": "Continous forwards movement of a pointer device on the Z axis.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PointerAxisNegativeZ",
              "description": "Continous backwards movement of a pointer device on the Z axis.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Keyboard",
              "description": "A keyboad with an unspecified amount of keys. Intended for emulated computers such as the Commodore 64.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Touchscreen",
              "description": "A touch sensitive surface of unspecified size and precision, where input can be expressed as a non-contiguous matrix of coordinates on a 2 dimentional cartesian plane. However, most touchscreens in video game controllers are only concerned with a single matrix due to the lack of multi-touch.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNone",
              "description": "The None Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyA",
              "description": "The A Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyB",
              "description": "The B Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyC",
              "description": "The C Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyD",
              "description": "The D Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyE",
              "description": "The E Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF",
              "description": "The F Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyG",
              "description": "The G Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyH",
              "description": "The H Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyI",
              "description": "The I Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyJ",
              "description": "The J Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyK",
              "description": "The K Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyL",
              "description": "The L Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyM",
              "description": "The M Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyN",
              "description": "The N Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyO",
              "description": "The O Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyP",
              "description": "The P Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyQ",
              "description": "The Q Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyR",
              "description": "The R Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyS",
              "description": "The S Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyT",
              "description": "The T Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyU",
              "description": "The U Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyV",
              "description": "The V Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyW",
              "description": "The W Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyX",
              "description": "The X Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyY",
              "description": "The Y Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyZ",
              "description": "The Z Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Key0",
              "description": "The 0 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Key1",
              "description": "The 1 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Key2",
              "description": "The 2 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Key3",
              "description": "The 3 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Key4",
              "description": "The 4 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Key5",
              "description": "The 5 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Key6",
              "description": "The 6 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Key7",
              "description": "The 7 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Key8",
              "description": "The 8 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Key9",
              "description": "The 9 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyEquals",
              "description": "The Equals (=) Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyMinus",
              "description": "The Minus (-) Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyBackspace",
              "description": "The Backspace Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeySpacebar",
              "description": "The Spacebar Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyEnter",
              "description": "The Enter Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyUp",
              "description": "The Up Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyDown",
              "description": "The Down Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyLeft",
              "description": "The Left Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyRight",
              "description": "The Right Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyTab",
              "description": "The Tab Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyInsert",
              "description": "The Insert Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyDelete",
              "description": "The Delete Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyHome",
              "description": "The Home Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyEnd",
              "description": "The End Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyPageUp",
              "description": "The PageUp Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyPageDown",
              "description": "The PageDown Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyShift",
              "description": "The Shift Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyCtrl",
              "description": "The Ctrl Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyAlt",
              "description": "The Alt Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyEscape",
              "description": "The Escape Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyTilde",
              "description": "The Tilde (~) Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyQuote",
              "description": "The Quote (') Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeySemicolon",
              "description": "The Semicolon (;) Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyComma",
              "description": "The Comma (:) Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyPeriod",
              "description": "The Period (.) Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeySlash",
              "description": "The Slash (/) Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyBracketLeft",
              "description": "The Left Bracket ([)Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyBracketRight",
              "description": "The Right Brackey (]) Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyBackslash",
              "description": "The Backslash (\\) Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyRightAlt",
              "description": "The Right Alt Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyRightCtrl",
              "description": "The Right Ctrl Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyRightShift",
              "description": "The Right Shift Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNum0",
              "description": "The Num0 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNum1",
              "description": "The Num1 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNum2",
              "description": "The Num2 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNum3",
              "description": "The Num3 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNum4",
              "description": "The Num4 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNum5",
              "description": "The Num5 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNum6",
              "description": "The Num6 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNum7",
              "description": "The Num7 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNum8",
              "description": "The Num8 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNum9",
              "description": "The Num9 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNumPeriod",
              "description": "The NumPeriod Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNumPlus",
              "description": "The NumPlus Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNumMinus",
              "description": "The NumMinus Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyNumEnter",
              "description": "The NumEnter Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF1",
              "description": "The F1 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF2",
              "description": "The F2 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF3",
              "description": "The F3 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF4",
              "description": "The F4 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF5",
              "description": "The F5 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF6",
              "description": "The F6 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF7",
              "description": "The F7 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF8",
              "description": "The F8 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF9",
              "description": "The F9 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF10",
              "description": "The F10 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF11",
              "description": "The F11 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KeyF12",
              "description": "The F12 Key.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LowLevelInputDeviceConnection",
          "description": "A connection from an object to a list of objects of type `LowLevelInputDevice`.",
          "fields": [
            {
              "name": "totalCount",
              "description": "A count of the total number of objects in this connection, ignoring pagination. This allows a client to fetch the first five objects by passing \"5\" as the argument to `first`, then fetch the total count so it could display \"5 of 83\", for example. In cases where we employ infinite scrolling or don't have an exact count of entries, this field will return `null`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "LowLevelInputDeviceEdge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "A list of all of the objects returned in the connection. This is a convenience field provided for quickly exploring the API; rather than querying for \"{ edges { node } }\" when no edge data is needed, this field can be used instead. Note that when clients like Relay need to fetch the \"cursor\" field on the edge to enable efficient pagination, this shortcut cannot be used, and the full \"{ edges { node } } \" version should be used instead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "LowLevelInputDevice",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LowLevelInputDeviceEdge",
          "description": "An edge in a connection from an object to another object of type `LowLevelInputDevice`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LowLevelInputDevice",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LowLevelInputDevice",
          "description": "Describes an attached input device at the input API level.",
          "fields": [
            {
              "name": "di_InstanceName",
              "description": "DirectInput Instance Name.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "di_InterfacePath",
              "description": "DirectInput Interface Path.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "di_ProductName",
              "description": "DirectInput Product Name.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "di_ProductGuid",
              "description": "DirectInput ProductGuid.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "di_InstanceGuid",
              "description": "DirectInput InstanceGuid.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "di_EnumerationNumber",
              "description": "DirectInput Enumeration Number.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "di_JoystickID",
              "description": "DirectInput Joystick ID.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "di_ProductID",
              "description": "DirectInput Product ID",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "di_VendorID",
              "description": "DirectInput Vendor ID",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "discoveryApi",
              "description": "Discovery API.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InputApi",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "xi_IsXinput",
              "description": "XInput Is XInput Device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "xi_GamepadIndex",
              "description": "XInput Gamepad ID.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "xi_IsConnected",
              "description": "XInput Is Connected.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "udev_Vendor",
              "description": "UDEV Vendor.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "udev_MountPath",
              "description": "UDEV MountPath.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "udev_Model",
              "description": "UDEV Model.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "InputApi",
          "description": "Input APIs supported by Snowflake.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "X_INPUT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DIRECT_INPUT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RAW_INPUT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UDEV",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WND_PROC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HID",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "InputDeviceConnection",
          "description": "A connection from an object to a list of objects of type `InputDevice`.",
          "fields": [
            {
              "name": "totalCount",
              "description": "A count of the total number of objects in this connection, ignoring pagination. This allows a client to fetch the first five objects by passing \"5\" as the argument to `first`, then fetch the total count so it could display \"5 of 83\", for example. In cases where we employ infinite scrolling or don't have an exact count of entries, this field will return `null`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "InputDeviceEdge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "A list of all of the objects returned in the connection. This is a convenience field provided for quickly exploring the API; rather than querying for \"{ edges { node } }\" when no edge data is needed, this field can be used instead. Note that when clients like Relay need to fetch the \"cursor\" field on the edge to enable efficient pagination, this shortcut cannot be used, and the full \"{ edges { node } } \" version should be used instead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "InputDevice",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "InputDeviceEdge",
          "description": "An edge in a connection from an object to another object of type `InputDevice`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "InputDevice",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "InputDevice",
          "description": "Describes an enumerated input device with a determined layout.",
          "fields": [
            {
              "name": "deviceApi",
              "description": "The input API of this device.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InputApi",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceLayout",
              "description": "The Stone layout for this device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ControllerLayout",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceInfo",
              "description": "The low level device information for this enumerated input device",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LowLevelInputDevice",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "controllerName",
              "description": "The human-readable name for this controller.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceId",
              "description": "The unique name for this type of controller.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceIndex",
              "description": "The 0 - indexed controller number for multiple controllers.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MappedControllerElementCollection",
          "description": "A collection of mapped controller elements. Essentially a mapping profile from a real device to an emulated virtual device.",
          "fields": [
            {
              "name": "controllerId",
              "description": "The Stone Controller ID of the emulated controller this collection maps to.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceId",
              "description": "The Controller ID of the real device this collection maps from.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mappings",
              "description": "The set of mappings that map each element from the real device to the emulated device.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MappedControllerElement",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MappedControllerElement",
          "description": "Decribes a mapping between an element on a real input device to an element on an emulated controller.",
          "fields": [
            {
              "name": "deviceElement",
              "description": "The element on the real input device.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "ControllerElement",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "layoutElement",
              "description": "The element on the emulated input device the real device element maps to.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "ControllerElement",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "EmulatorTaskResult",
          "description": "The result of a running task.",
          "fields": [
            {
              "name": "emulatorName",
              "description": "The name of the emulator executing this task.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isRunning",
              "description": "Whether or not this task is currently running.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "EmulatedControllerInput",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "portIndex",
              "description": "The port index of the emulated controller.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "controllerProfile",
              "description": "The name of the desired mapping profile.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "\"default\""
            },
            {
              "name": "targetLayout",
              "description": "The name of the desired Stone controller to map the device to.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "inputDevice",
              "description": "The physical input device for this emulated controller.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "InputDeviceInput",
                "ofType": null
              },
              "defaultValue": "null"
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InputDeviceInput",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "deviceIndex",
              "description": "The index of the device.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": "null"
            },
            {
              "name": "deviceId",
              "description": "The ID of the device.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "deviceApi",
              "description": "The input API of the device.",
              "type": {
                "kind": "ENUM",
                "name": "InputApi",
                "ofType": null
              },
              "defaultValue": "null"
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "EmulatedController",
          "description": "Represents an emulated controller definition with a real input device, a target layout, and a mapping.",
          "fields": [
            {
              "name": "portIndex",
              "description": "The index of the emulated port for this emulated controller.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inputDevice",
              "description": "The physical input device for this emulated controller",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "InputDevice",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "layoutMapping",
              "description": "The layout mapping for this emulated controller.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "MappedControllerElementCollection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "targetLayout",
              "description": "The target layout for this emulated controller.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ControllerLayout",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ModuleConnection",
          "description": "A connection from an object to a list of objects of type `Module`.",
          "fields": [
            {
              "name": "totalCount",
              "description": "A count of the total number of objects in this connection, ignoring pagination. This allows a client to fetch the first five objects by passing \"5\" as the argument to `first`, then fetch the total count so it could display \"5 of 83\", for example. In cases where we employ infinite scrolling or don't have an exact count of entries, this field will return `null`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ModuleEdge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "A list of all of the objects returned in the connection. This is a convenience field provided for quickly exploring the API; rather than querying for \"{ edges { node } }\" when no edge data is needed, this field can be used instead. Note that when clients like Relay need to fetch the \"cursor\" field on the edge to enable efficient pagination, this shortcut cannot be used, and the full \"{ edges { node } } \" version should be used instead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Module",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ModuleEdge",
          "description": "An edge in a connection from an object to another object of type `Module`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Module",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Module",
          "description": "A module installed in the modules folder.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the module.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "THe name of the module.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loader",
              "description": "The name of the loader used to load this module.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the module as specified in its manifest.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "StringConnection",
          "description": "A connection from an object to a list of objects of type `String`.",
          "fields": [
            {
              "name": "totalCount",
              "description": "A count of the total number of objects in this connection, ignoring pagination. This allows a client to fetch the first five objects by passing \"5\" as the argument to `first`, then fetch the total count so it could display \"5 of 83\", for example. In cases where we employ infinite scrolling or don't have an exact count of entries, this field will return `null`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StringEdge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "A list of all of the objects returned in the connection. This is a convenience field provided for quickly exploring the API; rather than querying for \"{ edges { node } }\" when no edge data is needed, this field can be used instead. Note that when clients like Relay need to fetch the \"cursor\" field on the edge to enable efficient pagination, this shortcut cannot be used, and the full \"{ edges { node } } \" version should be used instead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "StringEdge",
          "description": "An edge in a connection from an object to another object of type `String`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PluginConnection",
          "description": "A connection from an object to a list of objects of type `Plugin`.",
          "fields": [
            {
              "name": "totalCount",
              "description": "A count of the total number of objects in this connection, ignoring pagination. This allows a client to fetch the first five objects by passing \"5\" as the argument to `first`, then fetch the total count so it could display \"5 of 83\", for example. In cases where we employ infinite scrolling or don't have an exact count of entries, this field will return `null`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PluginEdge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "A list of all of the objects returned in the connection. This is a convenience field provided for quickly exploring the API; rather than querying for \"{ edges { node } }\" when no edge data is needed, this field can be used instead. Note that when clients like Relay need to fetch the \"cursor\" field on the edge to enable efficient pagination, this shortcut cannot be used, and the full \"{ edges { node } } \" version should be used instead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Plugin",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PluginEdge",
          "description": "An edge in a connection from an object to another object of type `Plugin`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Plugin",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Plugin",
          "description": "A loadable Snowflake plugin managed by the plugin manager.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The description of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The plugin name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "PluginInterface",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INTERFACE",
          "name": "PluginInterface",
          "description": "A loadable Snowflake plugin managed by the plugin manager.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The description of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The plugin name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Plugin",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Scraper",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Emulator",
              "ofType": null
            }
          ]
        },
        {
          "kind": "OBJECT",
          "name": "ScraperConnection",
          "description": "A connection from an object to a list of objects of type `Scraper`.",
          "fields": [
            {
              "name": "totalCount",
              "description": "A count of the total number of objects in this connection, ignoring pagination. This allows a client to fetch the first five objects by passing \"5\" as the argument to `first`, then fetch the total count so it could display \"5 of 83\", for example. In cases where we employ infinite scrolling or don't have an exact count of entries, this field will return `null`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ScraperEdge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "A list of all of the objects returned in the connection. This is a convenience field provided for quickly exploring the API; rather than querying for \"{ edges { node } }\" when no edge data is needed, this field can be used instead. Note that when clients like Relay need to fetch the \"cursor\" field on the edge to enable efficient pagination, this shortcut cannot be used, and the full \"{ edges { node } } \" version should be used instead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Scraper",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ScraperEdge",
          "description": "An edge in a connection from an object to another object of type `Scraper`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Scraper",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Scraper",
          "description": "A scraper plugin produces seeds to create game records.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The description of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The plugin name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "targetType",
              "description": "The type of seeds this scraper requires.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "PluginInterface",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "EmulatorConnection",
          "description": "A connection from an object to a list of objects of type `Emulator`.",
          "fields": [
            {
              "name": "totalCount",
              "description": "A count of the total number of objects in this connection, ignoring pagination. This allows a client to fetch the first five objects by passing \"5\" as the argument to `first`, then fetch the total count so it could display \"5 of 83\", for example. In cases where we employ infinite scrolling or don't have an exact count of entries, this field will return `null`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "EmulatorEdge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "A list of all of the objects returned in the connection. This is a convenience field provided for quickly exploring the API; rather than querying for \"{ edges { node } }\" when no edge data is needed, this field can be used instead. Note that when clients like Relay need to fetch the \"cursor\" field on the edge to enable efficient pagination, this shortcut cannot be used, and the full \"{ edges { node } } \" version should be used instead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Emulator",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "EmulatorEdge",
          "description": "An edge in a connection from an object to another object of type `Emulator`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Emulator",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Emulator",
          "description": "An emulator plugin.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The description of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the emulator.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the plugin.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mimetypes",
              "description": "The mimetypes this emulator supports executing.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "requiredBios",
              "description": "The BIOS system files this emulator requires.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "optionalBios",
              "description": "The BIOS system files this emulator may use to unlock additional functionality.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "saveFormat",
              "description": "The format this emulator saves game data as.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "specialCapabilities",
              "description": "The special capabilities this emulator has.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "PluginInterface",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PlatformInfoConnection",
          "description": "A connection from an object to a list of objects of type `PlatformInfo`.",
          "fields": [
            {
              "name": "totalCount",
              "description": "A count of the total number of objects in this connection, ignoring pagination. This allows a client to fetch the first five objects by passing \"5\" as the argument to `first`, then fetch the total count so it could display \"5 of 83\", for example. In cases where we employ infinite scrolling or don't have an exact count of entries, this field will return `null`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PlatformInfoEdge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "A list of all of the objects returned in the connection. This is a convenience field provided for quickly exploring the API; rather than querying for \"{ edges { node } }\" when no edge data is needed, this field can be used instead. Note that when clients like Relay need to fetch the \"cursor\" field on the edge to enable efficient pagination, this shortcut cannot be used, and the full \"{ edges { node } } \" version should be used instead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PlatformInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PlatformInfoEdge",
          "description": "An edge in a connection from an object to another object of type `PlatformInfo`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PlatformInfo",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PlatformInfo",
          "description": "A Stone Platform Definition.",
          "fields": [
            {
              "name": "platformID",
              "description": "The Stone PlatformID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "friendlyName",
              "description": "The human readable name of the platform.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "maximumInputs",
              "description": "The maximum inputs this platform can have.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fileType",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FileType",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "metadata",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Metadata",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "biosFiles",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BiosFiles",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FileType",
          "description": "A FileType is defined by its common extension, and a mimetype, usually of",
          "fields": [
            {
              "name": "extension",
              "description": "The file extension of the file type",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mime",
              "description": "The mimetype of the file type",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Metadata",
          "description": null,
          "fields": [
            {
              "name": "key",
              "description": "The metadata key.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "The metadata value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BiosFiles",
          "description": "The BIOS Files that this Platform is known to have.",
          "fields": [
            {
              "name": "fileName",
              "description": "The file name of this BIOS file.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "md5Hash",
              "description": "The MD5 hash of this BIOS file.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GameRecordConnection",
          "description": "A connection from an object to a list of objects of type `GameRecord`.",
          "fields": [
            {
              "name": "totalCount",
              "description": "A count of the total number of objects in this connection, ignoring pagination. This allows a client to fetch the first five objects by passing \"5\" as the argument to `first`, then fetch the total count so it could display \"5 of 83\", for example. In cases where we employ infinite scrolling or don't have an exact count of entries, this field will return `null`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "GameRecordEdge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "A list of all of the objects returned in the connection. This is a convenience field provided for quickly exploring the API; rather than querying for \"{ edges { node } }\" when no edge data is needed, this field can be used instead. Note that when clients like Relay need to fetch the \"cursor\" field on the edge to enable efficient pagination, this shortcut cannot be used, and the full \"{ edges { node } } \" version should be used instead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "GameRecord",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GameRecordEdge",
          "description": "An edge in a connection from an object to another object of type `GameRecord`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GameRecord",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GameRecord",
          "description": "A record of an executable Game",
          "fields": [
            {
              "name": "files",
              "description": "A list of files associated with this game.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FileRecord",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "platformID",
              "description": "The ID of the platform that this game is from.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "title",
              "description": "The title of the game.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "guid",
              "description": "The unique ID of the game.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "metadata",
              "description": "A list of metadata related to this game.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RecordMetadata",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Record",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FileRecord",
          "description": "A record of a file related to a game or other metadatable record.",
          "fields": [
            {
              "name": "filePath",
              "description": "The path to the file.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mimeType",
              "description": "The file's mimetype.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "guid",
              "description": "The unique ID of the game.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "metadata",
              "description": "A list of metadata related to this game.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RecordMetadata",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Record",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "RecordMetadata",
          "description": "A piece of metadata associated with a record.",
          "fields": [
            {
              "name": "guid",
              "description": "The unique ID of the metadata.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "record",
              "description": "The GUID of the record this metadata is referenced to.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "key",
              "description": "The key identifying this metadata.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "The value of this metadata.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INTERFACE",
          "name": "Record",
          "description": "A piece of Recordable and Metadatable data.",
          "fields": [
            {
              "name": "guid",
              "description": "The unique ID of the record.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "metadata",
              "description": "A list of metadata related to this data.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RecordMetadata",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "FileRecord",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "GameRecord",
              "ofType": null
            }
          ]
        },
        {
          "kind": "OBJECT",
          "name": "FileRecordConnection",
          "description": "A connection from an object to a list of objects of type `FileRecord`.",
          "fields": [
            {
              "name": "totalCount",
              "description": "A count of the total number of objects in this connection, ignoring pagination. This allows a client to fetch the first five objects by passing \"5\" as the argument to `first`, then fetch the total count so it could display \"5 of 83\", for example. In cases where we employ infinite scrolling or don't have an exact count of entries, this field will return `null`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FileRecordEdge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "A list of all of the objects returned in the connection. This is a convenience field provided for quickly exploring the API; rather than querying for \"{ edges { node } }\" when no edge data is needed, this field can be used instead. Note that when clients like Relay need to fetch the \"cursor\" field on the edge to enable efficient pagination, this shortcut cannot be used, and the full \"{ edges { node } } \" version should be used instead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FileRecord",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FileRecordEdge",
          "description": "An edge in a connection from an object to another object of type `FileRecord`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FileRecord",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Seed",
          "description": "A seed represents a piece of data in the process of scraping a game.",
          "fields": [
            {
              "name": "source",
              "description": "The source of this seed.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "guid",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "parent",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "content",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SeedContent",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SeedContent",
          "description": "A content of the seed.",
          "fields": [
            {
              "name": "type",
              "description": "The type of the Seed content.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "The value of the Seed content.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SeedTreeInputObjectCollection",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "seeds",
              "description": null,
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SeedTreeInput",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SeedTreeInput",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "type",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "value",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "children",
              "description": null,
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SeedTreeInput",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Mutation",
          "description": "The mutation root of Snowflake's GraphQL interface",
          "fields": [
            {
              "name": "setGameConfigurationValue",
              "description": "Config Options",
              "args": [
                {
                  "name": "input",
                  "description": "The value to set.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "INPUT_OBJECT",
                        "name": "ConfigurationValueInput",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RawConfigurationValue",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "setPluginConfigurationValue",
              "description": "Config Options",
              "args": [
                {
                  "name": "input",
                  "description": "The value to set.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "INPUT_OBJECT",
                        "name": "ConfigurationValueInput",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RawConfigurationValue",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createControllerProfile",
              "description": "Creates the default controller profile for the given Stone controller and real device.",
              "args": [
                {
                  "name": "input",
                  "description": "The input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DefaultMappedControllerElementCollectionInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "MappedControllerElementCollection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "setControllerProfile",
              "description": "Creates the default controller profile for the given Stone controller and real device.",
              "args": [
                {
                  "name": "input",
                  "description": "The input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MappedControllerElementCollectionInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "MappedControllerElementCollection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addGame",
              "description": "Adds a game to the database directly.",
              "args": [
                {
                  "name": "input",
                  "description": "game input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "GameRecordInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "GameRecord",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addFile",
              "description": "Adds a file to the database directly.",
              "args": [
                {
                  "name": "input",
                  "description": "File input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "FileRecordInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FileRecord",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "RawConfigurationValue",
          "description": "The raw configuration value.",
          "fields": [
            {
              "name": "guid",
              "description": "The GUID of this saved configuration value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "The value of this saved configuration value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Primitive",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ConfigurationValueInput",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "guid",
              "description": "The GUID of the value to set.",
              "type": {
                "kind": "SCALAR",
                "name": "Guid",
                "ofType": null
              },
              "defaultValue": "null"
            },
            {
              "name": "value",
              "description": "The value to set the option to.",
              "type": {
                "kind": "SCALAR",
                "name": "Primitive",
                "ofType": null
              },
              "defaultValue": "null"
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DefaultMappedControllerElementCollectionInput",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "controllerId",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "deviceId",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "profileName",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "\"default\""
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "MappedControllerElementCollectionInput",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "controllerId",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "deviceId",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "profileName",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "mappings",
              "description": null,
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MappedControllerElementInput",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "MappedControllerElementInput",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "layoutElement",
              "description": null,
              "type": {
                "kind": "ENUM",
                "name": "ControllerElement",
                "ofType": null
              },
              "defaultValue": "null"
            },
            {
              "name": "deviceElement",
              "description": null,
              "type": {
                "kind": "ENUM",
                "name": "ControllerElement",
                "ofType": null
              },
              "defaultValue": "null"
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GameRecordInput",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "title",
              "description": "The title of the game.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "metadata",
              "description": "Some metadata about the game.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "RecordMetadataInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "platform",
              "description": "The platform of the game.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "RecordMetadataInput",
          "description": "An input type for a piece of record metadata.",
          "fields": null,
          "inputFields": [
            {
              "name": "key",
              "description": "The metadata key.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "value",
              "description": "The metadata value.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FileRecordInput",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "filePath",
              "description": "The path of the file.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "metadata",
              "description": "Some metadata about the file.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "RecordMetadataInput",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "mimeType",
              "description": "The mimetype of the file.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        }
      ],
      "directives": [
        {
          "name": "include",
          "description": "Directs the executor to include this field or fragment only when the 'if' argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Included when true.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            }
          ]
        },
        {
          "name": "skip",
          "description": "Directs the executor to skip this field or fragment when the 'if' argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Skipped when true.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "defaultValue": "null"
            }
          ]
        },
        {
          "name": "deprecated",
          "description": "Marks an element of a GraphQL schema as no longer supported.",
          "locations": [
            "FIELD_DEFINITION",
            "ENUM_VALUE"
          ],
          "args": [
            {
              "name": "reason",
              "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted in [Markdown](https://daringfireball.net/projects/markdown/).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": "\"No longer supported\""
            }
          ]
        }
      ]
    }
  },
  "errors": [ ]
}